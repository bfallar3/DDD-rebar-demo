<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <configSections xdt:Transform="InsertIfMissing">
    <section name="system.identityModel"
             type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
    <section name="system.identityModel.services"
             type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"  xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
    <section name="securitySessionConfiguration" type="Thinktecture.IdentityModel.Web.Configuration.SecuritySessionSection, Thinktecture.IdentityModel" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
  </configSections>

  <securitySessionConfiguration
    cacheSessionsOnServer="false"
    sessionTokenCacheType=""
    useMackineKeyProtectionForSessionTokens="true"
    defaultSessionDuration="01:00:00"
    persistentSessionDuration="01:00:00"
    enableSlidingSessionExpirations="false"
    overrideWSFedTokenLifetime="false"
    suppressLoginRedirectsForApiCalls="true"
    suppressSecurityTokenExceptions="true"
    xdt:Transform="InsertIfMissing"
  />
  
  <securitySessionConfiguration
    cacheSessionsOnServer="false"
    xdt:Transform="SetAttributes(cacheSessionsOnServer)" xdt:Locator="Condition(not(@cacheSessionsOnServer))"
  />
  <securitySessionConfiguration
    sessionTokenCacheType=""
    xdt:Transform="SetAttributes(sessionTokenCacheType)" xdt:Locator="Condition(not(@sessionTokenCacheType))"
  />
  <securitySessionConfiguration
    useMackineKeyProtectionForSessionTokens="true"
    xdt:Transform="SetAttributes(useMackineKeyProtectionForSessionTokens)" xdt:Locator="Condition(not(@useMackineKeyProtectionForSessionTokens))"
  />
  <securitySessionConfiguration
    defaultSessionDuration="01:00:00"
    xdt:Transform="SetAttributes(defaultSessionDuration)" xdt:Locator="Condition(not(@defaultSessionDuration))"
  />
  <securitySessionConfiguration
    persistentSessionDuration="01:00:00"
    xdt:Transform="SetAttributes(persistentSessionDuration)" xdt:Locator="Condition(not(@persistentSessionDuration))"
  />
  <securitySessionConfiguration
    enableSlidingSessionExpirations="false"
    xdt:Transform="SetAttributes(enableSlidingSessionExpirations)" xdt:Locator="Condition(not(@enableSlidingSessionExpirations))"
  />
  <securitySessionConfiguration
   overrideWSFedTokenLifetime="false"
    xdt:Transform="SetAttributes(overrideWSFedTokenLifetime)" xdt:Locator="Condition(not(@overrideWSFedTokenLifetime))"
  />
  <securitySessionConfiguration
   suppressLoginRedirectsForApiCalls="true"
    xdt:Transform="SetAttributes(suppressLoginRedirectsForApiCalls)" xdt:Locator="Condition(not(@suppressLoginRedirectsForApiCalls))"
  />
  <securitySessionConfiguration
   suppressSecurityTokenExceptions="true"
    xdt:Transform="SetAttributes(suppressSecurityTokenExceptions)" xdt:Locator="Condition(not(@suppressSecurityTokenExceptions))"
  />

  <system.identityModel  xdt:Transform="InsertIfMissing">
    <identityConfiguration saveBootstrapContext="true"  xdt:Transform="InsertIfMissing">
      <audienceUris  xdt:Transform="InsertIfMissing">
        <add value="http://localhost:{iisexpressport}/" xdt:Transform="InsertIfMissing"/>
        <!-- ENTER APPLICATION URL HERE-->
      </audienceUris>

      <certificateValidation certificateValidationMode="None" xdt:Transform="InsertIfMissing"></certificateValidation>

      <issuerNameRegistry type="Thinktecture.IdentityModel.Tokens.MetadataBasedIssuerNameRegistry, Thinktecture.IdentityModel"  xdt:Transform="InsertIfMissing">
        <trustedIssuerMetadata issuerName="local-sts"
                               metadataAddress="https://localhost/_sts/FederationMetadata/2007-06/FederationMetadata.xml" xdt:Transform="InsertIfMissing">
        </trustedIssuerMetadata>
      </issuerNameRegistry>

    </identityConfiguration>
  </system.identityModel>

  <system.identityModel.services  xdt:Transform="InsertIfMissing">
    <federationConfiguration  xdt:Transform="InsertIfMissing">
      <cookieHandler requireSsl="false"  xdt:Transform="InsertIfMissing"></cookieHandler>
      <wsFederation requireHttps="false"
                    passiveRedirectEnabled="true"
                    realm="http://localhost:{iisexpressport}/"
                    issuer="http://localhost:{iisexpressport}/_sts"
                    xdt:Transform="InsertIfMissing"
      />
      <!-- ENTER APPLICATION URL HERE AND PORT-->
    </federationConfiguration>
  </system.identityModel.services>

  <system.web  xdt:Transform="InsertIfMissing">
    <authorization xdt:Transform="InsertIfMissing">
      <deny users="?" xdt:Transform="InsertIfMissing"/>
    </authorization>
  </system.web>

  <system.webServer  xdt:Transform="InsertIfMissing">
    <modules  xdt:Transform="InsertIfMissing">
      <remove name="FormsAuthentication" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <add name="SessionAuthenticationModule"
           preCondition="managed"
           type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <add name="WSFederationAuthenticationModule"
           preCondition="managed"
           type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
    </modules>
  </system.webServer>
</configuration>